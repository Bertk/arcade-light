{
  "DotNet.ArcadeLight.Common.dll": {
    "C:\\GitHub\\arcade-light\\src\\Common\\DotNet.ArcadeLight.Common\\ArgumentEscaper.cs": {
      "DotNet.ArcadeLight.Common.ArgumentEscaper": {
        "System.String DotNet.ArcadeLight.Common.ArgumentEscaper::EscapeAndConcatenateArgArrayForProcessStart(System.Collections.Generic.IEnumerable`1<System.String>)": {
          "Lines": {
            "16": 1,
            "17": 1,
            "18": 1
          },
          "Branches": []
        },
        "System.String DotNet.ArcadeLight.Common.ArgumentEscaper::EscapeAndConcatenateArgArrayForCmdProcessStart(System.Collections.Generic.IEnumerable`1<System.String>)": {
          "Lines": {
            "31": 0,
            "32": 0,
            "33": 0
          },
          "Branches": []
        },
        "System.String DotNet.ArcadeLight.Common.ArgumentEscaper::EscapeArg(System.String)": {
          "Lines": {
            "36": 8,
            "37": 8,
            "40": 8,
            "41": 8,
            "42": 8,
            "43": 3,
            "44": 3,
            "45": 3,
            "47": 268,
            "48": 126,
            "49": 126,
            "50": 2,
            "51": 2,
            "54": 124,
            "57": 124,
            "58": 0,
            "59": 0,
            "60": 0,
            "61": 0,
            "66": 124,
            "67": 0,
            "68": 0,
            "69": 0,
            "72": 124,
            "73": 1,
            "74": 1,
            "75": 1,
            "76": 1,
            "80": 123,
            "81": 123,
            "82": 123,
            "83": 123,
            "84": 124,
            "86": 8,
            "87": 3,
            "88": 3,
            "89": 3,
            "91": 8,
            "92": 8
          },
          "Branches": [
            {
              "Line": 41,
              "Offset": 15,
              "EndOffset": 17,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 7
            },
            {
              "Line": 41,
              "Offset": 15,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            },
            {
              "Line": 42,
              "Offset": 32,
              "EndOffset": 34,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 3
            },
            {
              "Line": 42,
              "Offset": 32,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 8
            },
            {
              "Line": 47,
              "Offset": 272,
              "EndOffset": 56,
              "Path": 1,
              "Ordinal": 19,
              "Hits": 126
            },
            {
              "Line": 49,
              "Offset": 58,
              "EndOffset": 60,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 12
            },
            {
              "Line": 49,
              "Offset": 62,
              "EndOffset": 64,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 11
            },
            {
              "Line": 49,
              "Offset": 62,
              "EndOffset": 78,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 1
            },
            {
              "Line": 49,
              "Offset": 58,
              "EndOffset": 81,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 114
            },
            {
              "Line": 49,
              "Offset": 86,
              "EndOffset": 88,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 2
            },
            {
              "Line": 49,
              "Offset": 86,
              "EndOffset": 94,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 124
            },
            {
              "Line": 57,
              "Offset": 142,
              "EndOffset": 99,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 57,
              "Offset": 121,
              "EndOffset": 123,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 124
            },
            {
              "Line": 57,
              "Offset": 121,
              "EndOffset": 137,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 57,
              "Offset": 142,
              "EndOffset": 144,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 124
            },
            {
              "Line": 66,
              "Offset": 158,
              "EndOffset": 160,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 66,
              "Offset": 158,
              "EndOffset": 177,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 124
            },
            {
              "Line": 72,
              "Offset": 193,
              "EndOffset": 195,
              "Path": 0,
              "Ordinal": 16,
              "Hits": 1
            },
            {
              "Line": 72,
              "Offset": 193,
              "EndOffset": 223,
              "Path": 1,
              "Ordinal": 17,
              "Hits": 123
            },
            {
              "Line": 47,
              "Offset": 272,
              "EndOffset": 277,
              "Path": 0,
              "Ordinal": 18,
              "Hits": 8
            },
            {
              "Line": 86,
              "Offset": 284,
              "EndOffset": 286,
              "Path": 0,
              "Ordinal": 20,
              "Hits": 3
            },
            {
              "Line": 86,
              "Offset": 284,
              "EndOffset": 300,
              "Path": 1,
              "Ordinal": 21,
              "Hits": 8
            }
          ]
        },
        "System.String DotNet.ArcadeLight.Common.ArgumentEscaper::EscapeArgForCmd(System.String)": {
          "Lines": {
            "95": 0,
            "96": 0,
            "98": 0,
            "99": 0,
            "101": 0,
            "102": 0,
            "103": 0,
            "104": 0,
            "106": 0,
            "107": 0,
            "108": 0,
            "109": 0,
            "110": 0,
            "111": 0,
            "112": 0,
            "113": 0,
            "114": 0,
            "116": 0,
            "117": 0,
            "118": 0,
            "119": 0,
            "120": 0,
            "122": 0,
            "123": 0,
            "124": 0,
            "125": 0,
            "127": 0,
            "128": 0
          },
          "Branches": [
            {
              "Line": 99,
              "Offset": 15,
              "EndOffset": 17,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 99,
              "Offset": 15,
              "EndOffset": 25,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 101,
              "Offset": 30,
              "EndOffset": 32,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 101,
              "Offset": 30,
              "EndOffset": 46,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 158,
              "EndOffset": 55,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 108,
              "Offset": 77,
              "EndOffset": 79,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 108,
              "Offset": 77,
              "EndOffset": 119,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 158,
              "EndOffset": 160,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 122,
              "Offset": 165,
              "EndOffset": 167,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 122,
              "Offset": 165,
              "EndOffset": 181,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            }
          ]
        },
        "System.Boolean DotNet.ArcadeLight.Common.ArgumentEscaper::ShouldSurroundWithQuotes(System.String)": {
          "Lines": {
            "131": 7,
            "133": 7,
            "134": 7
          },
          "Branches": [
            {
              "Line": 133,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 6
            },
            {
              "Line": 133,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 6
            },
            {
              "Line": 133,
              "Offset": 29,
              "EndOffset": 31,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 6
            },
            {
              "Line": 133,
              "Offset": 9,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 1
            },
            {
              "Line": 133,
              "Offset": 19,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 133,
              "Offset": 29,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 1
            }
          ]
        },
        "System.Boolean DotNet.ArcadeLight.Common.ArgumentEscaper::IsQuoted(System.String)": {
          "Lines": {
            "138": 8,
            "139": 8,
            "140": 8
          },
          "Branches": [
            {
              "Line": 139,
              "Offset": 8,
              "EndOffset": 10,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 8
            },
            {
              "Line": 139,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 7
            },
            {
              "Line": 139,
              "Offset": 19,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 1
            },
            {
              "Line": 139,
              "Offset": 8,
              "EndOffset": 44,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\GitHub\\arcade-light\\src\\Common\\DotNet.ArcadeLight.Common\\Command.cs": {
      "DotNet.ArcadeLight.Common.Command": {
        "DotNet.ArcadeLight.Common.ICommand DotNet.ArcadeLight.Common.Command::QuietBuildReporter()": {
          "Lines": {
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0
          },
          "Branches": []
        },
        "DotNet.ArcadeLight.Common.CommandResult DotNet.ArcadeLight.Common.Command::Execute()": {
          "Lines": {
            "56": 0,
            "57": 0,
            "58": 0,
            "60": 0,
            "61": 0,
            "62": 0,
            "63": 0,
            "64": 0,
            "65": 0,
            "66": 0,
            "68": 0,
            "69": 0,
            "70": 0,
            "71": 0,
            "72": 0,
            "73": 0,
            "74": 0,
            "76": 0,
            "78": 0,
            "79": 0,
            "80": 0,
            "81": 0,
            "82": 0,
            "83": 0,
            "85": 0,
            "86": 0,
            "88": 0,
            "90": 0,
            "91": 0,
            "92": 0,
            "93": 0,
            "95": 0,
            "96": 0,
            "97": 0,
            "98": 0,
            "100": 0,
            "102": 0,
            "104": 0,
            "106": 0,
            "107": 0,
            "108": 0,
            "109": 0,
            "110": 0,
            "111": 0
          },
          "Branches": [
            {
              "Line": 60,
              "Offset": 38,
              "EndOffset": 40,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 60,
              "Offset": 38,
              "EndOffset": 66,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 68,
              "Offset": 84,
              "EndOffset": 86,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 68,
              "Offset": 84,
              "EndOffset": 112,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 78,
              "Offset": 141,
              "EndOffset": 143,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 78,
              "Offset": 159,
              "EndOffset": 161,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 78,
              "Offset": 141,
              "EndOffset": 179,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 78,
              "Offset": 159,
              "EndOffset": 179,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 78,
              "Offset": 184,
              "EndOffset": 186,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 78,
              "Offset": 184,
              "EndOffset": 206,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 90,
              "Offset": 251,
              "EndOffset": 253,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 90,
              "Offset": 251,
              "EndOffset": 267,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 95,
              "Offset": 287,
              "EndOffset": 289,
              "Path": 0,
              "Ordinal": 12,
              "Hits": 0
            },
            {
              "Line": 95,
              "Offset": 287,
              "EndOffset": 303,
              "Path": 1,
              "Ordinal": 13,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 354,
              "EndOffset": 356,
              "Path": 0,
              "Ordinal": 14,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 354,
              "EndOffset": 360,
              "Path": 1,
              "Ordinal": 15,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 366,
              "EndOffset": 368,
              "Path": 0,
              "Ordinal": 16,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 366,
              "EndOffset": 372,
              "Path": 1,
              "Ordinal": 17,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 384,
              "EndOffset": 386,
              "Path": 0,
              "Ordinal": 18,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 384,
              "EndOffset": 390,
              "Path": 1,
              "Ordinal": 19,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 396,
              "EndOffset": 398,
              "Path": 0,
              "Ordinal": 20,
              "Hits": 0
            },
            {
              "Line": 106,
              "Offset": 396,
              "EndOffset": 402,
              "Path": 1,
              "Ordinal": 21,
              "Hits": 0
            }
          ]
        },
        "DotNet.ArcadeLight.Common.ICommand DotNet.ArcadeLight.Common.Command::WorkingDirectory(System.String)": {
          "Lines": {
            "114": 0,
            "115": 0,
            "116": 0,
            "117": 0
          },
          "Branches": []
        },
        "DotNet.ArcadeLight.Common.ICommand DotNet.ArcadeLight.Common.Command::EnvironmentVariable(System.String,System.String)": {
          "Lines": {
            "120": 0,
            "124": 0,
            "126": 0,
            "127": 0,
            "128": 0
          },
          "Branches": []
        },
        "DotNet.ArcadeLight.Common.ICommand DotNet.ArcadeLight.Common.Command::ForwardStatus(System.IO.TextWriter)": {
          "Lines": {
            "131": 0,
            "132": 0,
            "133": 0,
            "134": 0,
            "135": 0,
            "136": 0,
            "138": 0,
            "139": 0,
            "140": 0,
            "141": 0,
            "142": 0
          },
          "Branches": [
            {
              "Line": 133,
              "Offset": 19,
              "EndOffset": 21,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 133,
              "Offset": 19,
              "EndOffset": 43,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "DotNet.ArcadeLight.Common.ICommand DotNet.ArcadeLight.Common.Command::CaptureStdOut()": {
          "Lines": {
            "145": 0,
            "146": 0,
            "147": 0,
            "148": 0,
            "149": 0,
            "150": 0
          },
          "Branches": []
        },
        "DotNet.ArcadeLight.Common.ICommand DotNet.ArcadeLight.Common.Command::CaptureStdErr()": {
          "Lines": {
            "153": 0,
            "154": 0,
            "155": 0,
            "156": 0,
            "157": 0,
            "158": 0
          },
          "Branches": []
        },
        "DotNet.ArcadeLight.Common.ICommand DotNet.ArcadeLight.Common.Command::ForwardStdOut(System.IO.TextWriter)": {
          "Lines": {
            "161": 0,
            "162": 0,
            "163": 0,
            "164": 0,
            "165": 0,
            "166": 0,
            "167": 0,
            "169": 0,
            "170": 0,
            "171": 0,
            "172": 0,
            "173": 0
          },
          "Branches": [
            {
              "Line": 164,
              "Offset": 37,
              "EndOffset": 39,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 164,
              "Offset": 37,
              "EndOffset": 61,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "DotNet.ArcadeLight.Common.ICommand DotNet.ArcadeLight.Common.Command::ForwardStdErr(System.IO.TextWriter)": {
          "Lines": {
            "176": 0,
            "177": 0,
            "178": 0,
            "179": 0,
            "180": 0,
            "181": 0,
            "182": 0,
            "184": 0,
            "185": 0,
            "186": 0,
            "187": 0,
            "188": 0
          },
          "Branches": [
            {
              "Line": 179,
              "Offset": 37,
              "EndOffset": 39,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 179,
              "Offset": 37,
              "EndOffset": 61,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "DotNet.ArcadeLight.Common.ICommand DotNet.ArcadeLight.Common.Command::OnOutputLine(System.Action`1<System.String>)": {
          "Lines": {
            "191": 0,
            "192": 0,
            "193": 0,
            "194": 0,
            "195": 0,
            "196": 0,
            "198": 0,
            "199": 0,
            "200": 0
          },
          "Branches": [
            {
              "Line": 194,
              "Offset": 42,
              "EndOffset": 44,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 194,
              "Offset": 42,
              "EndOffset": 56,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "DotNet.ArcadeLight.Common.ICommand DotNet.ArcadeLight.Common.Command::OnErrorLine(System.Action`1<System.String>)": {
          "Lines": {
            "203": 0,
            "204": 0,
            "205": 0,
            "206": 0,
            "207": 0,
            "208": 0,
            "210": 0,
            "211": 0,
            "212": 0
          },
          "Branches": [
            {
              "Line": 206,
              "Offset": 42,
              "EndOffset": 44,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 206,
              "Offset": 42,
              "EndOffset": 56,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.String DotNet.ArcadeLight.Common.Command::FormatProcessInfo(System.Diagnostics.ProcessStartInfo,System.Boolean)": {
          "Lines": {
            "215": 0,
            "216": 0,
            "217": 0,
            "218": 0,
            "220": 0,
            "221": 0,
            "222": 0,
            "225": 0,
            "226": 0
          },
          "Branches": [
            {
              "Line": 216,
              "Offset": 2,
              "EndOffset": 4,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 216,
              "Offset": 2,
              "EndOffset": 12,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 220,
              "Offset": 48,
              "EndOffset": 50,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 220,
              "Offset": 48,
              "EndOffset": 55,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void DotNet.ArcadeLight.Common.Command::ReportExecBegin()": {
          "Lines": {
            "229": 0,
            "230": 0,
            "231": 0,
            "232": 0,
            "233": 0,
            "234": 0
          },
          "Branches": [
            {
              "Line": 230,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 230,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 230,
              "Offset": 23,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 230,
              "Offset": 23,
              "EndOffset": 67,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void DotNet.ArcadeLight.Common.Command::ReportExecEnd(System.Int32)": {
          "Lines": {
            "237": 0,
            "238": 0,
            "239": 0,
            "240": 0,
            "242": 0,
            "244": 0,
            "245": 0,
            "246": 0
          },
          "Branches": [
            {
              "Line": 238,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 238,
              "Offset": 7,
              "EndOffset": 20,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 238,
              "Offset": 23,
              "EndOffset": 25,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 238,
              "Offset": 23,
              "EndOffset": 93,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Void DotNet.ArcadeLight.Common.Command::ThrowIfRunning(System.String)": {
          "Lines": {
            "249": 0,
            "250": 0,
            "251": 0,
            "252": 0,
            "254": 0
          },
          "Branches": [
            {
              "Line": 250,
              "Offset": 9,
              "EndOffset": 11,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 250,
              "Offset": 9,
              "EndOffset": 34,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void DotNet.ArcadeLight.Common.Command::ProcessData(System.String,System.IO.StringWriter,System.Action`1<System.String>,System.Action`1<System.String>)": {
          "Lines": {
            "257": 0,
            "258": 0,
            "259": 0,
            "260": 0,
            "263": 0,
            "264": 0,
            "265": 0,
            "266": 0,
            "268": 0,
            "269": 0,
            "270": 0,
            "271": 0,
            "273": 0,
            "274": 0,
            "275": 0,
            "276": 0,
            "277": 0
          },
          "Branches": [
            {
              "Line": 258,
              "Offset": 7,
              "EndOffset": 9,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 258,
              "Offset": 7,
              "EndOffset": 12,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 263,
              "Offset": 18,
              "EndOffset": 20,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 263,
              "Offset": 18,
              "EndOffset": 30,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 268,
              "Offset": 36,
              "EndOffset": 38,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 268,
              "Offset": 36,
              "EndOffset": 48,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 273,
              "Offset": 55,
              "EndOffset": 57,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 273,
              "Offset": 55,
              "EndOffset": 68,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            }
          ]
        },
        "System.Void DotNet.ArcadeLight.Common.Command::.ctor(System.String,System.String)": {
          "Lines": {
            "31": 0,
            "32": 0,
            "34": 0,
            "35": 0,
            "37": 0,
            "38": 0,
            "39": 0,
            "40": 0,
            "41": 0,
            "43": 0,
            "44": 0,
            "45": 0,
            "46": 0,
            "47": 0
          },
          "Branches": []
        },
        "System.Void DotNet.ArcadeLight.Common.Command::.cctor()": {
          "Lines": {
            "14": 0,
            "15": 0,
            "16": 0
          },
          "Branches": [
            {
              "Line": 14,
              "Offset": 10,
              "EndOffset": 12,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 14,
              "Offset": 10,
              "EndOffset": 28,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\GitHub\\arcade-light\\src\\Common\\DotNet.ArcadeLight.Common\\CommandFactory.cs": {
      "DotNet.ArcadeLight.Common.CommandFactory": {
        "DotNet.ArcadeLight.Common.ICommand DotNet.ArcadeLight.Common.CommandFactory::Create(System.String,System.String[])": {
          "Lines": {
            "15": 0,
            "16": 0,
            "17": 0
          },
          "Branches": []
        },
        "DotNet.ArcadeLight.Common.ICommand DotNet.ArcadeLight.Common.CommandFactory::Create(System.String,System.Collections.Generic.IEnumerable`1<System.String>)": {
          "Lines": {
            "20": 0,
            "21": 0,
            "22": 0
          },
          "Branches": []
        },
        "DotNet.ArcadeLight.Common.ICommand DotNet.ArcadeLight.Common.CommandFactory::Create(System.String,System.String)": {
          "Lines": {
            "25": 0,
            "26": 0,
            "28": 0,
            "29": 0
          },
          "Branches": []
        },
        "System.Void DotNet.ArcadeLight.Common.CommandFactory::ResolveExecutablePath(System.String&,System.String&)": {
          "Lines": {
            "32": 0,
            "35": 0,
            "37": 0,
            "38": 0,
            "39": 0,
            "43": 0,
            "44": 0,
            "45": 0,
            "46": 0,
            "47": 0,
            "48": 0,
            "49": 0,
            "50": 0
          },
          "Branches": [
            {
              "Line": 37,
              "Offset": 12,
              "EndOffset": 14,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 38,
              "EndOffset": 40,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 38,
              "EndOffset": 73,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 37,
              "Offset": 12,
              "EndOffset": 96,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Boolean DotNet.ArcadeLight.Common.CommandFactory::ShouldUseCmd(System.String)": {
          "Lines": {
            "53": 0,
            "54": 0,
            "55": 0,
            "56": 0,
            "57": 0,
            "58": 0,
            "59": 0,
            "61": 0,
            "62": 0,
            "64": 0,
            "65": 0,
            "67": 0,
            "69": 0,
            "71": 0,
            "73": 0,
            "74": 0,
            "75": 0,
            "76": 0,
            "77": 0,
            "79": 0,
            "81": 0,
            "82": 0,
            "85": 0,
            "89": 0,
            "90": 0
          },
          "Branches": [
            {
              "Line": 54,
              "Offset": 13,
              "EndOffset": 18,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 57,
              "Offset": 37,
              "EndOffset": 39,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 57,
              "Offset": 37,
              "EndOffset": 61,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 61,
              "Offset": 76,
              "EndOffset": 78,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 64,
              "Offset": 99,
              "EndOffset": 101,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 64,
              "Offset": 99,
              "EndOffset": 106,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 61,
              "Offset": 76,
              "EndOffset": 109,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 73,
              "Offset": 206,
              "EndOffset": 147,
              "Path": 1,
              "Ordinal": 11,
              "Hits": 0
            },
            {
              "Line": 76,
              "Offset": 186,
              "EndOffset": 188,
              "Path": 0,
              "Ordinal": 8,
              "Hits": 0
            },
            {
              "Line": 76,
              "Offset": 186,
              "EndOffset": 193,
              "Path": 1,
              "Ordinal": 9,
              "Hits": 0
            },
            {
              "Line": 73,
              "Offset": 206,
              "EndOffset": 208,
              "Path": 0,
              "Ordinal": 10,
              "Hits": 0
            },
            {
              "Line": 54,
              "Offset": 13,
              "EndOffset": 213,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\GitHub\\arcade-light\\src\\Common\\DotNet.ArcadeLight.Common\\CommandResult.cs": {
      "DotNet.ArcadeLight.Common.CommandResult": {
        "System.Diagnostics.ProcessStartInfo DotNet.ArcadeLight.Common.CommandResult::get_StartInfo()": {
          "Lines": {
            "14": 0
          },
          "Branches": []
        },
        "System.Int32 DotNet.ArcadeLight.Common.CommandResult::get_ExitCode()": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.String DotNet.ArcadeLight.Common.CommandResult::get_StdOut()": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "System.String DotNet.ArcadeLight.Common.CommandResult::get_StdErr()": {
          "Lines": {
            "17": 0
          },
          "Branches": []
        },
        "System.Void DotNet.ArcadeLight.Common.CommandResult::EnsureSuccessful(System.Boolean)": {
          "Lines": {
            "28": 0,
            "29": 0,
            "30": 0,
            "31": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "37": 0,
            "38": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "43": 0,
            "44": 0,
            "46": 0,
            "48": 0
          },
          "Branches": [
            {
              "Line": 29,
              "Offset": 12,
              "EndOffset": 17,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 33,
              "Offset": 73,
              "EndOffset": 75,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 92,
              "EndOffset": 94,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 35,
              "Offset": 92,
              "EndOffset": 129,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 40,
              "Offset": 147,
              "EndOffset": 149,
              "Path": 0,
              "Ordinal": 6,
              "Hits": 0
            },
            {
              "Line": 40,
              "Offset": 147,
              "EndOffset": 184,
              "Path": 1,
              "Ordinal": 7,
              "Hits": 0
            },
            {
              "Line": 33,
              "Offset": 73,
              "EndOffset": 185,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 29,
              "Offset": 12,
              "EndOffset": 197,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "System.Void DotNet.ArcadeLight.Common.CommandResult::.ctor(System.Diagnostics.ProcessStartInfo,System.Int32,System.String,System.String)": {
          "Lines": {
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0
          },
          "Branches": []
        },
        "System.Void DotNet.ArcadeLight.Common.CommandResult::.cctor()": {
          "Lines": {
            "12": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\GitHub\\arcade-light\\src\\Common\\DotNet.ArcadeLight.Common\\ExponentialRetry.cs": {
      "DotNet.ArcadeLight.Common.ExponentialRetry": {
        "System.Int32 DotNet.ArcadeLight.Common.ExponentialRetry::get_MaxAttempts()": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Double DotNet.ArcadeLight.Common.ExponentialRetry::get_DelayBase()": {
          "Lines": {
            "20": 0
          },
          "Branches": []
        },
        "System.Double DotNet.ArcadeLight.Common.ExponentialRetry::get_DelayConstant()": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "System.Double DotNet.ArcadeLight.Common.ExponentialRetry::get_MinRandomFactor()": {
          "Lines": {
            "29": 0
          },
          "Branches": []
        },
        "System.Double DotNet.ArcadeLight.Common.ExponentialRetry::get_MaxRandomFactor()": {
          "Lines": {
            "30": 0
          },
          "Branches": []
        },
        "System.Threading.CancellationToken DotNet.ArcadeLight.Common.ExponentialRetry::get_DefaultCancellationToken()": {
          "Lines": {
            "32": 0
          },
          "Branches": []
        },
        "System.Threading.Tasks.Task`1<System.Boolean> DotNet.ArcadeLight.Common.ExponentialRetry::RunAsync(System.Func`2<System.Int32,System.Threading.Tasks.Task`1<System.Boolean>>)": {
          "Lines": {
            "35": 0,
            "36": 0,
            "37": 0
          },
          "Branches": []
        },
        "System.Void DotNet.ArcadeLight.Common.ExponentialRetry::.ctor()": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        }
      },
      "DotNet.ArcadeLight.Common.ExponentialRetry/<RunAsync>d__26": {
        "System.Void DotNet.ArcadeLight.Common.ExponentialRetry/<RunAsync>d__26::MoveNext()": {
          "Lines": {
            "42": 0,
            "43": 0,
            "44": 0,
            "45": 0,
            "46": 0,
            "48": 0,
            "49": 0,
            "50": 0,
            "53": 0,
            "54": 0,
            "56": 0,
            "57": 0,
            "59": 0,
            "62": 0,
            "63": 0,
            "64": 0,
            "65": 0,
            "66": 0,
            "67": 0,
            "69": 0,
            "70": 0,
            "71": 0
          },
          "Branches": [
            {
              "Line": 43,
              "Offset": 563,
              "EndOffset": 41,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            },
            {
              "Line": 48,
              "Offset": 220,
              "EndOffset": 222,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 48,
              "Offset": 220,
              "EndOffset": 230,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 43,
              "Offset": 563,
              "EndOffset": 568,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            }
          ]
        }
      }
    },
    "C:\\GitHub\\arcade-light\\src\\Common\\DotNet.ArcadeLight.Common\\FileSystem.cs": {
      "DotNet.ArcadeLight.Common.FileSystem": {
        "System.Void DotNet.ArcadeLight.Common.FileSystem::CreateDirectory(System.String)": {
          "Lines": {
            "11": 0
          },
          "Branches": []
        },
        "System.Boolean DotNet.ArcadeLight.Common.FileSystem::DirectoryExists(System.String)": {
          "Lines": {
            "13": 0
          },
          "Branches": []
        },
        "System.Boolean DotNet.ArcadeLight.Common.FileSystem::FileExists(System.String)": {
          "Lines": {
            "15": 0
          },
          "Branches": []
        },
        "System.Void DotNet.ArcadeLight.Common.FileSystem::DeleteFile(System.String)": {
          "Lines": {
            "17": 0
          },
          "Branches": []
        },
        "System.String DotNet.ArcadeLight.Common.FileSystem::GetDirectoryName(System.String)": {
          "Lines": {
            "19": 0
          },
          "Branches": []
        },
        "System.String DotNet.ArcadeLight.Common.FileSystem::GetFileName(System.String)": {
          "Lines": {
            "21": 0
          },
          "Branches": []
        },
        "System.String DotNet.ArcadeLight.Common.FileSystem::GetFileNameWithoutExtension(System.String)": {
          "Lines": {
            "23": 0
          },
          "Branches": []
        },
        "System.String DotNet.ArcadeLight.Common.FileSystem::GetExtension(System.String)": {
          "Lines": {
            "25": 0
          },
          "Branches": []
        },
        "System.String DotNet.ArcadeLight.Common.FileSystem::PathCombine(System.String,System.String)": {
          "Lines": {
            "27": 0
          },
          "Branches": []
        },
        "System.Void DotNet.ArcadeLight.Common.FileSystem::WriteToFile(System.String,System.String)": {
          "Lines": {
            "30": 0,
            "31": 0,
            "32": 0,
            "33": 0,
            "34": 0
          },
          "Branches": []
        },
        "System.Void DotNet.ArcadeLight.Common.FileSystem::CopyFile(System.String,System.String,System.Boolean)": {
          "Lines": {
            "36": 0
          },
          "Branches": []
        },
        "System.IO.Stream DotNet.ArcadeLight.Common.FileSystem::GetFileStream(System.String,System.IO.FileMode,System.IO.FileAccess)": {
          "Lines": {
            "38": 0
          },
          "Branches": []
        },
        "System.IO.FileAttributes DotNet.ArcadeLight.Common.FileSystem::GetAttributes(System.String)": {
          "Lines": {
            "40": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\GitHub\\arcade-light\\src\\Common\\DotNet.ArcadeLight.Common\\Helpers.cs": {
      "DotNet.ArcadeLight.Common.Helpers": {
        "System.String DotNet.ArcadeLight.Common.Helpers::RemoveTrailingSlash(System.String)": {
          "Lines": {
            "13": 0,
            "14": 0,
            "15": 0
          },
          "Branches": []
        },
        "System.String DotNet.ArcadeLight.Common.Helpers::ComputeSha256Hash(System.String)": {
          "Lines": {
            "18": 0,
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0,
            "23": 0,
            "24": 0,
            "25": 0,
            "27": 0
          },
          "Branches": []
        },
        "T DotNet.ArcadeLight.Common.Helpers::MutexExec(System.Func`1<T>,System.String)": {
          "Lines": {
            "30": 0,
            "31": 0,
            "32": 0,
            "35": 0,
            "37": 0,
            "38": 0,
            "39": 0,
            "40": 0,
            "41": 0,
            "42": 0,
            "44": 0,
            "45": 0,
            "48": 0,
            "49": 0,
            "50": 0,
            "51": 0,
            "52": 0,
            "53": 0,
            "54": 0
          },
          "Branches": [
            {
              "Line": 49,
              "Offset": 43,
              "EndOffset": 45,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 49,
              "Offset": 43,
              "EndOffset": 54,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        },
        "T DotNet.ArcadeLight.Common.Helpers::MutexExec(System.Func`1<System.Threading.Tasks.Task`1<T>>,System.String)": {
          "Lines": {
            "57": 0
          },
          "Branches": []
        },
        "System.Void DotNet.ArcadeLight.Common.Helpers::MutexExec(System.Func`1<System.Threading.Tasks.Task>,System.String)": {
          "Lines": {
            "61": 0
          },
          "Branches": []
        },
        "T DotNet.ArcadeLight.Common.Helpers::DirectoryMutexExec(System.Func`1<T>,System.String)": {
          "Lines": {
            "64": 0
          },
          "Branches": []
        },
        "T DotNet.ArcadeLight.Common.Helpers::DirectoryMutexExec(System.Func`1<System.Threading.Tasks.Task`1<T>>,System.String)": {
          "Lines": {
            "67": 0
          },
          "Branches": []
        },
        "System.Void DotNet.ArcadeLight.Common.Helpers::DirectoryMutexExec(System.Func`1<System.Threading.Tasks.Task>,System.String)": {
          "Lines": {
            "71": 0
          },
          "Branches": []
        }
      },
      "DotNet.ArcadeLight.Common.KeyValuePairExtensions": {
        "System.Void DotNet.ArcadeLight.Common.KeyValuePairExtensions::Deconstruct(System.Collections.Generic.KeyValuePair`2<TKey,TValue>,TKey&,TValue&)": {
          "Lines": {
            "76": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\GitHub\\arcade-light\\src\\Common\\DotNet.ArcadeLight.Common\\MSBuildTaskBase.cs": {
      "DotNet.ArcadeLight.Common.MSBuildTaskBase": {
        "System.Boolean DotNet.ArcadeLight.Common.MSBuildTaskBase::Execute()": {
          "Lines": {
            "31": 0,
            "32": 0,
            "33": 0,
            "34": 0,
            "35": 0,
            "36": 0,
            "38": 0
          },
          "Branches": []
        },
        "System.Boolean DotNet.ArcadeLight.Common.MSBuildTaskBase::InvokeExecute(Microsoft.Extensions.DependencyInjection.ServiceProvider)": {
          "Lines": {
            "50": 0,
            "51": 0,
            "52": 0
          },
          "Branches": []
        },
        "System.Type[] DotNet.ArcadeLight.Common.MSBuildTaskBase::GetExecuteParameterTypes()": {
          "Lines": {
            "69": 0,
            "70": 0,
            "71": 0
          },
          "Branches": []
        },
        "System.Object[] DotNet.ArcadeLight.Common.MSBuildTaskBase::GetExecuteArguments(Microsoft.Extensions.DependencyInjection.ServiceProvider)": {
          "Lines": {
            "80": 0,
            "81": 0,
            "82": 0
          },
          "Branches": []
        },
        "System.Reflection.MethodInfo DotNet.ArcadeLight.Common.MSBuildTaskBase::GetExecuteMethod()": {
          "Lines": {
            "89": 0,
            "90": 0,
            "91": 0
          },
          "Branches": []
        }
      }
    },
    "C:\\GitHub\\arcade-light\\src\\Common\\DotNet.ArcadeLight.Common\\ZipArchiveManager.cs": {
      "DotNet.ArcadeLight.Common.ZipArchiveManager": {
        "System.IO.Compression.ZipArchive DotNet.ArcadeLight.Common.ZipArchiveManager::OpenArchive(System.String,System.IO.Compression.ZipArchiveMode)": {
          "Lines": {
            "16": 0
          },
          "Branches": []
        },
        "System.Void DotNet.ArcadeLight.Common.ZipArchiveManager::ArchiveDirectory(System.String,System.String,System.Boolean)": {
          "Lines": {
            "25": 0
          },
          "Branches": []
        },
        "System.Void DotNet.ArcadeLight.Common.ZipArchiveManager::ArchiveFile(System.String,System.String)": {
          "Lines": {
            "28": 0,
            "29": 0,
            "30": 0,
            "32": 0,
            "33": 0,
            "36": 0,
            "37": 0,
            "38": 0,
            "39": 0,
            "41": 0,
            "42": 0
          },
          "Branches": [
            {
              "Line": 33,
              "Offset": 35,
              "EndOffset": 37,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 33,
              "Offset": 35,
              "EndOffset": 40,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 53,
              "EndOffset": 55,
              "Path": 0,
              "Ordinal": 2,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 80,
              "EndOffset": 82,
              "Path": 0,
              "Ordinal": 4,
              "Hits": 0
            },
            {
              "Line": 38,
              "Offset": 80,
              "EndOffset": 85,
              "Path": 1,
              "Ordinal": 5,
              "Hits": 0
            },
            {
              "Line": 36,
              "Offset": 53,
              "EndOffset": 92,
              "Path": 1,
              "Ordinal": 3,
              "Hits": 0
            }
          ]
        },
        "System.Threading.Tasks.Task DotNet.ArcadeLight.Common.ZipArchiveManager::AddContentToArchive(System.String,System.String,System.String)": {
          "Lines": {
            "45": 0
          },
          "Branches": []
        },
        "System.IO.Stream DotNet.ArcadeLight.Common.ZipArchiveManager::GetResourceFileContent(System.String)": {
          "Lines": {
            "61": 0,
            "62": 0,
            "63": 0,
            "64": 0
          },
          "Branches": []
        }
      },
      "DotNet.ArcadeLight.Common.ZipArchiveManager/<>c__DisplayClass5_0": {
        "System.Boolean DotNet.ArcadeLight.Common.ZipArchiveManager/<>c__DisplayClass5_0::<AddContentToArchive>b__0(System.IO.Compression.ZipArchiveEntry)": {
          "Lines": {
            "53": 0
          },
          "Branches": []
        }
      },
      "DotNet.ArcadeLight.Common.ZipArchiveManager/<AddContentToArchive>d__5": {
        "System.Void DotNet.ArcadeLight.Common.ZipArchiveManager/<AddContentToArchive>d__5::MoveNext()": {
          "Lines": {
            "48": 0,
            "49": 0,
            "50": 0,
            "55": 0,
            "56": 0,
            "57": 0,
            "58": 0
          },
          "Branches": [
            {
              "Line": 53,
              "Offset": 129,
              "EndOffset": 131,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 53,
              "Offset": 129,
              "EndOffset": 134,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      },
      "DotNet.ArcadeLight.Common.ZipArchiveManager/<AddResourceFileToArchive>d__1`1": {
        "System.Void DotNet.ArcadeLight.Common.ZipArchiveManager/<AddResourceFileToArchive>d__1`1::MoveNext()": {
          "Lines": {
            "19": 0,
            "20": 0,
            "21": 0,
            "22": 0
          },
          "Branches": [
            {
              "Line": 21,
              "Offset": 59,
              "EndOffset": 61,
              "Path": 0,
              "Ordinal": 0,
              "Hits": 0
            },
            {
              "Line": 21,
              "Offset": 59,
              "EndOffset": 68,
              "Path": 1,
              "Ordinal": 1,
              "Hits": 0
            }
          ]
        }
      }
    }
  }
}