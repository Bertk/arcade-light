parameters:
  # Required: TargetOS value to know what script commands to use
  # Accepted values:
  # - Windows_NT
  # - Linux
  # - OSX
  # - FreeBSD
  targetOS: ''

  # Required: value to specify if the job is comming from an official build to run extra steps and sign binaries
  #   Default: false
  isOfficialBuild: false

  # EACH JOB SHOULD INCLUDE THE FOLLOWING PROPERTIES (ASIDE FROM THE REQUIRED ONES IN THE JOB SCHEMA)

  # Required: as part of the strategy matrix, the following variables should be defined
  #     _BuildConfig: Debug | Release
  #     _architecture: x64 | x86 | arm | arm64
  #     _framework: (netcoreapp, netfx, uap, etc).

  # Required: empty | innerloop | outerloop | all
  testScope: ''

  # Optional: _publishTests -> Boolean -> Publish test assets to blob storage if true.
  # Default: false
  #     _publishTests: true | false

  # Required: submitToHelix -> Boolean -> Value to know if it should submit tests payloads to helix.

  # Optional: buildScriptPrefix -> String -> string to append to Unix build script.
  #   buildScriptPrefix: 'HOME=/home/ ' -> 'HOME=/home/ ./build.sh ...'

  # Optional: buildExtraArguments -> String -> string to append at the end of the build arguments
  #   buildExtraArguments: /p:RuntimeOS=win10 -> 'build.cmd ... /p:RuntimeOS=win10'

  # Optional: customBuildSteps -> Array -> list of steps to run instead of the common build steps.
  #   customBuildSteps:
  #     - script: echo Hello World
  #       displayName: MyScript

  # Optional: preBuildSteps -> Array -> list of steps to be executed before common build steps.
  # In example, to install build dependencies, or setup an environment.
  #   preBuildSteps:
  #     - script: brew install cmake
  #       displayName: Install Cmake

  # timeoutInMinutes: if a job doesn't define it, we will default it to 150 minutes
jobs:
  - deployment: deploy_dev
    pool:
      vmImage: 'ubuntu-latest'
    timeoutInMinutes: '60'
    environment: 'Dev'
    strategy:
     runOnce:
      deploy:
         steps:
           -  script:  echo Dev Deployment
  - job: test_smoke
    dependsOn: deploy_dev
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: echo Smoke Tests
  - job: test_sanity
    dependsOn: test_smoke
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: echo Sanity Tests
  - job: create_documentation
    displayName: 'Create Documentation'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: echo create document artifacts
    - script: echo create tracing artifacts
    - script: echo create test artifacts
    - script: echo code review summary
